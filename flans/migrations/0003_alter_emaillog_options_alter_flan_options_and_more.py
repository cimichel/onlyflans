# Generated by Django 5.2.7 on 2025-10-22 08:16

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('flans', '0002_subscriber_emaillog'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='emaillog',
            options={'ordering': ['-sent_at'], 'verbose_name': 'Email Log', 'verbose_name_plural': 'Email Logs'},
        ),
        migrations.AlterModelOptions(
            name='flan',
            options={'ordering': ['-created_at'], 'verbose_name': 'Flan', 'verbose_name_plural': 'Flans'},
        ),
        migrations.AlterModelOptions(
            name='subscriber',
            options={'ordering': ['-subscribed_at'], 'verbose_name': 'Subscriber', 'verbose_name_plural': 'Subscribers'},
        ),
        migrations.AlterField(
            model_name='emaillog',
            name='subject',
            field=models.CharField(help_text='Email subject line', max_length=200),
        ),
        migrations.AlterField(
            model_name='emaillog',
            name='subscriber',
            field=models.ForeignKey(help_text='Subscriber who received the email', on_delete=django.db.models.deletion.CASCADE, related_name='email_logs', to='flans.subscriber'),
        ),
        migrations.AlterField(
            model_name='emaillog',
            name='was_successful',
            field=models.BooleanField(default=True, help_text='Whether the email was sent successfully'),
        ),
        migrations.AlterField(
            model_name='flan',
            name='creator',
            field=models.ForeignKey(help_text='User who created this flan', on_delete=django.db.models.deletion.CASCADE, related_name='flans', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='flan',
            name='description',
            field=models.TextField(help_text='Detailed description of the flan'),
        ),
        migrations.AlterField(
            model_name='flan',
            name='flan_type',
            field=models.CharField(choices=[('vanilla', 'Vanilla Classic'), ('chocolate', 'Chocolate Dream'), ('coconut', 'Coconut Paradise'), ('coffee', 'Coffee Delight'), ('special', "Chef's Special")], default='vanilla', help_text='Type of flan', max_length=20),
        ),
        migrations.AlterField(
            model_name='flan',
            name='image_url',
            field=models.URLField(blank=True, help_text='URL to flan image', max_length=500),
        ),
        migrations.AlterField(
            model_name='flan',
            name='is_premium',
            field=models.BooleanField(default=False, help_text='Whether this is premium content'),
        ),
        migrations.AlterField(
            model_name='flan',
            name='name',
            field=models.CharField(help_text='Name of the flan recipe', max_length=200),
        ),
        migrations.AlterField(
            model_name='flan',
            name='price',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Price for premium flans', max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AlterField(
            model_name='subscriber',
            name='email',
            field=models.EmailField(help_text="Subscriber's email address", max_length=254, unique=True),
        ),
        migrations.AlterField(
            model_name='subscriber',
            name='favorite_flan_type',
            field=models.CharField(blank=True, choices=[('vanilla', 'Vanilla Classic'), ('chocolate', 'Chocolate Dream'), ('coconut', 'Coconut Paradise'), ('coffee', 'Coffee Delight'), ('special', "Chef's Special")], help_text='Favorite flan type for personalized content', max_length=20),
        ),
        migrations.AlterField(
            model_name='subscriber',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Whether the subscriber is active'),
        ),
        migrations.AlterField(
            model_name='subscriber',
            name='name',
            field=models.CharField(blank=True, help_text="Subscriber's name (optional)", max_length=100),
        ),
        migrations.AlterField(
            model_name='subscriber',
            name='receive_new_flan_alerts',
            field=models.BooleanField(default=True, help_text='Receive alerts for new flans'),
        ),
        migrations.AlterField(
            model_name='subscriber',
            name='receive_weekly_digest',
            field=models.BooleanField(default=True, help_text='Receive weekly flan digest emails'),
        ),
        migrations.AddIndex(
            model_name='emaillog',
            index=models.Index(fields=['sent_at'], name='flans_email_sent_at_7e450c_idx'),
        ),
        migrations.AddIndex(
            model_name='emaillog',
            index=models.Index(fields=['was_successful'], name='flans_email_was_suc_15321b_idx'),
        ),
        migrations.AddIndex(
            model_name='flan',
            index=models.Index(fields=['flan_type', 'is_premium'], name='flans_flan_flan_ty_69891c_idx'),
        ),
        migrations.AddIndex(
            model_name='flan',
            index=models.Index(fields=['created_at'], name='flans_flan_created_cbfb0c_idx'),
        ),
    ]
